# Generated by Django 5.0.11 on 2025-09-24 11:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('music_cards', '0016_remove_category_embeds_remove_category_files_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='musicitem',
            options={'permissions': [('can_share_content', 'Can share content with other teachers'), ('can_use_shared_content', 'Can use shared content'), ('can_create_templates', 'Can create content templates')]},
        ),
        migrations.AddField(
            model_name='musicitem',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_music_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musicitem',
            name='is_template',
            field=models.BooleanField(default=False, help_text='Marca como plantilla reutilizable'),
        ),
        migrations.AddField(
            model_name='musicitem',
            name='original_item',
            field=models.ForeignKey(blank=True, help_text='Referencia al item original si es una copia', null=True, on_delete=django.db.models.deletion.SET_NULL, to='music_cards.musicitem'),
        ),
        migrations.AddField(
            model_name='musicitem',
            name='shared_with',
            field=models.ManyToManyField(blank=True, related_name='shared_music_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musicitem',
            name='visibility',
            field=models.CharField(choices=[('private', 'Privado'), ('shared', 'Compartido con profesores'), ('public', 'Público'), ('course_only', 'Solo para mi curso')], default='private', max_length=20),
        ),
        migrations.CreateModel(
            name='ContentLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_libraries', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='libraries', to='music_cards.tag')),
            ],
            options={
                'verbose_name_plural': 'Content Libraries',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='LibraryCollaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('view', 'Solo visualización'), ('contribute', 'Puede añadir contenido'), ('edit', 'Puede editar contenido'), ('admin', 'Administrador completo')], default='view', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_cards.contentlibrary')),
            ],
            options={
                'unique_together': {('library', 'collaborator')},
            },
        ),
        migrations.AddField(
            model_name='contentlibrary',
            name='collaborators',
            field=models.ManyToManyField(related_name='collaborated_libraries', through='music_cards.LibraryCollaboration', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LibraryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, help_text='Notas sobre este item en la biblioteca')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_cards.contentlibrary')),
                ('music_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_cards.musicitem')),
            ],
            options={
                'ordering': ['order', 'added_at'],
                'unique_together': {('library', 'music_item')},
            },
        ),
        migrations.AddField(
            model_name='contentlibrary',
            name='items',
            field=models.ManyToManyField(related_name='libraries', through='music_cards.LibraryItem', to='music_cards.musicitem'),
        ),
    ]
