# Generated by Django 5.0.11 on 2025-09-24 11:41

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('classroom', '0001_initial'),
        ('cms', '0001_initial'),
        ('music_cards', '0017_alter_musicitem_options_musicitem_created_by_and_more'),
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassSessionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('session_date', models.DateField(help_text='Fecha de la sesión de clase')),
                ('start_time', models.TimeField(blank=True, help_text='Hora de inicio de la sesión', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Hora de finalización de la sesión', null=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Descripción detallada de la sesión')),
                ('objectives', wagtail.fields.RichTextField(blank=True, help_text='Objetivos de aprendizaje de la sesión')),
                ('teacher_notes', wagtail.fields.RichTextField(blank=True, help_text='Notas privadas del profesor para la sesión')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('planned', 'Planificada'), ('in_progress', 'En progreso'), ('completed', 'Completada'), ('cancelled', 'Cancelada')], default='draft', help_text='Estado actual de la sesión', max_length=20)),
                ('course', models.ForeignKey(help_text='Curso al que pertenece esta sesión', on_delete=django.db.models.deletion.CASCADE, related_name='wagtail_sessions', to='classroom.course')),
            ],
            options={
                'verbose_name': 'Sesión de Clase',
                'verbose_name_plural': 'Sesiones de Clase',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MusicExercisePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Nivel 1'), (2, 'Nivel 2'), (3, 'Nivel 3'), (4, 'Nivel 4'), (5, 'Nivel 5')], default=1, help_text='Nivel de dificultad del ejercicio (1-5)')),
                ('estimated_duration', models.DurationField(blank=True, help_text='Duración estimada del ejercicio', null=True)),
                ('instructions', wagtail.fields.RichTextField(help_text='Instrucciones detalladas del ejercicio')),
                ('learning_objectives', wagtail.fields.RichTextField(blank=True, help_text='Objetivos de aprendizaje del ejercicio')),
                ('related_music_item', models.ForeignKey(blank=True, help_text='Elemento musical relacionado (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='music_cards.musicitem')),
            ],
            options={
                'verbose_name': 'Ejercicio Musical',
                'verbose_name_plural': 'Ejercicios Musicales',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SessionMusicItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('session_notes', wagtail.fields.RichTextField(blank=True, help_text='Notas específicas sobre cómo usar este elemento en la sesión')),
                ('estimated_duration', models.DurationField(blank=True, help_text='Tiempo estimado para este elemento (ej: 00:15:00 para 15 minutos)', null=True)),
                ('activity_type', models.CharField(blank=True, choices=[('warm_up', 'Calentamiento'), ('technique', 'Técnica'), ('repertoire', 'Repertorio'), ('theory', 'Teoría'), ('improvisation', 'Improvisación'), ('listening', 'Audición'), ('composition', 'Composición'), ('review', 'Repaso')], help_text='Tipo de actividad musical', max_length=20)),
                ('music_item', models.ForeignKey(help_text='Elemento musical a incluir en la sesión', on_delete=django.db.models.deletion.CASCADE, to='music_cards.musicitem')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_music_items', to='cms.classsessionpage')),
            ],
            options={
                'verbose_name': 'Elemento Musical de Sesión',
                'verbose_name_plural': 'Elementos Musicales de Sesión',
            },
        ),
    ]
